"""initial schema

Revision ID: 94ce75362c8f
Revises: 
Create Date: 2025-08-11 14:35:46.829661

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '94ce75362c8f'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('game_building_recipes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('time_requirement', sa.Float(), nullable=False),
    sa.Column('stamina_requirement', sa.Float(), nullable=False),
    sa.Column('consumed_building', sa.Integer(), nullable=False),
    sa.Column('required_interior_tier', sa.Integer(), nullable=False),
    sa.Column('consumed_shards', sa.Integer(), nullable=False),
    sa.Column('required_claim_tech_id', sa.Integer(), nullable=False),
    sa.Column('full_discovery_score', sa.Integer(), nullable=False),
    sa.Column('tool_mesh_index', sa.Integer(), nullable=False),
    sa.Column('building_description_id', sa.Integer(), nullable=False),
    sa.Column('required_paving_tier', sa.Integer(), nullable=False),
    sa.Column('actions_required', sa.Integer(), nullable=False),
    sa.Column('instantly_built', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('game_building_types',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('building_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('category', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('game_cargos',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('cargo_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('tier', sa.Integer(), nullable=False),
    sa.Column('rarity', sa.Integer(), nullable=False),
    sa.Column('tag', sa.String(length=255), nullable=False),
    sa.Column('volume', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('game_item_recipes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('actions_required', sa.Integer(), nullable=False),
    sa.Column('building_tier_requirement', sa.Integer(), nullable=False),
    sa.Column('building_type_requirement', sa.Integer(), nullable=False),
    sa.Column('stamina_requirement', sa.Float(), nullable=False),
    sa.Column('time_requirement', sa.Float(), nullable=False),
    sa.Column('tool_tier_requirement', sa.Integer(), nullable=True),
    sa.Column('tool_type_requirement', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('game_items',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('item_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('tier', sa.Integer(), nullable=False),
    sa.Column('rarity', sa.Integer(), nullable=False),
    sa.Column('tag', sa.String(length=255), nullable=False),
    sa.Column('volume', sa.Integer(), nullable=False),
    sa.Column('durability', sa.Integer(), nullable=False),
    sa.Column('icon_asset_name', sa.String(length=255), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('discord_id', sa.String(length=20), nullable=False),
    sa.Column('username', sa.String(length=100), nullable=False),
    sa.Column('discriminator', sa.String(length=10), nullable=True),
    sa.Column('global_name', sa.String(length=100), nullable=True),
    sa.Column('avatar', sa.String(length=200), nullable=True),
    sa.Column('email', sa.String(length=255), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_users_discord_id'), ['discord_id'], unique=True)

    op.create_table('game_building_recipe_consumed_cargos',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('building_recipe_id', sa.Integer(), nullable=False),
    sa.Column('cargo_id', sa.Integer(), nullable=False),
    sa.Column('amount', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['building_recipe_id'], ['game_building_recipes.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('game_building_recipe_consumed_items',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('building_recipe_id', sa.Integer(), nullable=False),
    sa.Column('item_id', sa.Integer(), nullable=False),
    sa.Column('amount', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['building_recipe_id'], ['game_building_recipes.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('game_building_recipe_experience_per_progress',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('building_recipe_id', sa.Integer(), nullable=False),
    sa.Column('skill_id', sa.Integer(), nullable=False),
    sa.Column('experience', sa.Float(), nullable=False),
    sa.ForeignKeyConstraint(['building_recipe_id'], ['game_building_recipes.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('game_building_recipe_level_requirements',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('building_recipe_id', sa.Integer(), nullable=False),
    sa.Column('level', sa.Integer(), nullable=False),
    sa.Column('skill_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['building_recipe_id'], ['game_building_recipes.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('game_building_recipe_tool_requirements',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('building_recipe_id', sa.Integer(), nullable=False),
    sa.Column('tool_id', sa.Integer(), nullable=False),
    sa.Column('tool_tier', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['building_recipe_id'], ['game_building_recipes.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('game_item_recipe_consumed',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('item_id', sa.Integer(), nullable=False),
    sa.Column('recipe_id', sa.Integer(), nullable=False),
    sa.Column('amount', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['recipe_id'], ['game_item_recipes.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('game_item_recipe_produced',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('item_id', sa.Integer(), nullable=False),
    sa.Column('recipe_id', sa.Integer(), nullable=False),
    sa.Column('amount', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['recipe_id'], ['game_item_recipes.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_groups',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('owner_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['owner_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('projects',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('owner_id', sa.Integer(), nullable=False),
    sa.Column('group_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['group_id'], ['user_groups.id'], ),
    sa.ForeignKeyConstraint(['owner_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_group_memberships',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('user_group_id', sa.Integer(), nullable=False),
    sa.Column('role', sa.Enum('MEMBER', 'CO_OWNER', 'OWNER', name='groupmemberrole'), nullable=False),
    sa.Column('joined_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_group_id'], ['user_groups.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'user_group_id')
    )
    op.create_table('project_items',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('item_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('count', sa.Integer(), nullable=False),
    sa.Column('target_count', sa.Integer(), nullable=False),
    sa.Column('project_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['item_id'], ['game_items.id'], ),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('project_items')
    op.drop_table('user_group_memberships')
    op.drop_table('projects')
    op.drop_table('user_groups')
    op.drop_table('game_item_recipe_produced')
    op.drop_table('game_item_recipe_consumed')
    op.drop_table('game_building_recipe_tool_requirements')
    op.drop_table('game_building_recipe_level_requirements')
    op.drop_table('game_building_recipe_experience_per_progress')
    op.drop_table('game_building_recipe_consumed_items')
    op.drop_table('game_building_recipe_consumed_cargos')
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_users_discord_id'))

    op.drop_table('users')
    op.drop_table('game_items')
    op.drop_table('game_item_recipes')
    op.drop_table('game_cargos')
    op.drop_table('game_building_types')
    op.drop_table('game_building_recipes')
    # ### end Alembic commands ###
